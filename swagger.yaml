swagger: "2.0"
info:
  version: "1.0.0"
  title: "Pet project 1"
host: "localhost"
basePath: "/"
tags:
- name: "user"
  description: "Operations about user"
  externalDocs:
    description: "user crud"
    url: "https://hentaihaven.red/"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "Create user"
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        '200':
          description: "Created new user"
          schema:
            $ref: "#/definitions/User"
  /user/get:
    get:
      tags:
      - "user"
      summary: "Get user"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Get user by id, nickname, name"
        required: true
        schema:
          $ref: "#/definitions/SearchUser"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid user id supplied"
        "404":
          description: "User not found"
  /user/{user_id}:
    post:
      tags:
      - "user"
      summary: "Update user"
      description: "Update user"
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The id of user that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "400":
          description: "Invalid user id supplied"
        "404":
          description: "User not found"
        "405":
          description: "Invalid input"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "Delete user"
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "user_id"
        in: "path"
        description: "The id of user that needs to be deleted"
        required: true
        type: "string"
      responses:
        "400":
          description: "Invalid user id supplied"
        "404":
          description: "User not found"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      name:
        type: "string"
      photo:
        type: "string"
      age:
        type: "integer"
    xml:
      name: "User"
  SearchUser:
    type: "object"
    properties:
      findBy:
        type: "string"
      id:
        type: "integer"
      username:
        type: "string"
      name:
        type: "string"
    xml:
      name: "SearchUser"
  